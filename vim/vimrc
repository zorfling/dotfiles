set nocompatible               " be iMproved
filetype on
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'

" My Bundles here:
"
" original repos on github
Bundle 'tpope/vim-sensible'
Bundle 'scrooloose/nerdtree'
Bundle 'altercation/vim-colors-solarized'
Bundle 'peaksea'
Bundle 'ervandew/supertab'
Bundle 'commentary.vim'
Bundle 'AutoTag'
Bundle 'EasyMotion'

" Languages and frameworks
Bundle 'php.vim-for-php5'
Bundle 'html5.vim'
Bundle 'pangloss/vim-javascript'
Bundle 'beyondwords/vim-twig'
Bundle 'rodjek/vim-puppet'
Bundle 'estin/htmljinja'
Bundle 'rails.vim'
Bundle 'tpope/vim-haml'
Bundle 'groenewege/vim-less'
Bundle "mattn/emmet-vim"
Bundle "editorconfig-vim"
Bundle "buftabs"
Bundle "vim-coffee-script"
Bundle "elzr/vim-json"

au BufRead,BufNewFile *.twig set filetype=htmljinja.html

syntax on
filetype plugin indent on     " required!

" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..

map [ :bprev<CR>
map ] :bnext<CR>

map = :NERDTreeToggle<CR>
map - :hide<CR>

nmap <bar> :vsplit<cr>
nmap _ :split<cr>

nmap <Tab> <C-W>

" Moving lines up and down http://vim.wikia.com/wiki/Moving_lines_up_or_down
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" Disable visual bell (set bell to visual, then clear) (primarily for lxterminal).
" http://vim.wikia.com/wiki/Disable_beeping
set noerrorbells visualbell t_vb=
if has('autocmd')
   autocmd GUIEnter * set visualbell t_vb=
endif

set tags=./.tags;/

autocmd vimenter * if !argc() | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" My original stuff
let g:solarized_termcolors=256
if ! has("gui_running")
    set t_Co=256
endif
" feel free to choose :set background=light for a different style
set background=dark
if &diff
    colorscheme peaksea
else
    colorscheme solarized
endif

set diffopt+=iwhite

set autoindent
set smartindent
set smarttab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

" Removes trailing whitespace
" autocmd BufWritePre * :%s/\s\+$//e

autocmd Filetype ruby setlocal ts=2 sw=2 expandtab
autocmd Filetype yaml setlocal ts=2 sw=2 expandtab

noremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode

let s:uname = system("echo -n \"$(uname)\"")
if !v:shell_error && s:uname == "Linux"
    let g:NERDTreeDirArrows=0
endif

set number
